html_nodes("td:nth-child(2) a") %>%
html_text()
location <- placesurl <- 0
for (i in 1:9) {
placesurl[i] <- paste("https://zh.wikipedia.org/wiki/%E4%B8%AD%E8%8F%AF%E6%B0%91%E5%9C%8B%E5%9C%8B%E5%AE%B6%E5%85%AC%E5%9C%92/", places[i],sep='')
}
# location[1] for latitude
# location[2] for
for (j in 1:9) {
location[1][j] <- read_html(placesurl[j])%>%html_nodes(".latitude")%>%html_text()
location[2][j] <- read_html(placesurl[j])%>%html_nodes(".longitude")%>%html_text()
}
location[1][1]
# location[1] for latitude
# location[2] for
for (j in 1:9) {
location[1,j] <- read_html(placesurl[j])%>%html_nodes(".latitude")%>%html_text()
location[2,j] <- read_html(placesurl[j])%>%html_nodes(".longitude")%>%html_text()
}
library(rvest)
places <- read_html("https://zh.wikipedia.org/wiki/%E4%B8%AD%E8%8F%AF%E6%B0%91%E5%9C%8B%E5%9C%8B%E5%AE%B6%E5%85%AC%E5%9C%92")%>%
html_nodes("td:nth-child(2) a") %>%
html_text()
location <- placesurl <- 0
for (i in 1:9) {
placesurl[i] <- paste("https://zh.wikipedia.org/wiki/%E4%B8%AD%E8%8F%AF%E6%B0%91%E5%9C%8B%E5%9C%8B%E5%AE%B6%E5%85%AC%E5%9C%92/", places[i],sep='')
}
placesurl[1]
# location[1] for latitude
# location[2] for
for (j in 1:9) {
location[1,j] <- read_html(placesurl[j])%>%html_nodes(".latitude")%>%html_text()
location[2,j] <- read_html(placesurl[j])%>%html_nodes(".longitude")%>%html_text()
}
library(rvest)
library(leaflet)
places <- read_html("https://zh.wikipedia.org/wiki/%E4%B8%AD%E8%8F%AF%E6%B0%91%E5%9C%8B%E5%9C%8B%E5%AE%B6%E5%85%AC%E5%9C%92")%>%
html_nodes("td:nth-child(2) a") %>%
html_text()
location <- placesurl <- 0
for (i in 1:9) {
placesurl[i] <- paste("https://zh.wikipedia.org/wiki/%E4%B8%AD%E8%8F%AF%E6%B0%91%E5%9C%8B%E5%9C%8B%E5%AE%B6%E5%85%AC%E5%9C%92/", places[i],sep='')
}
placesurl[1]
# location[1] for latitude
# location[2] for
for (j in 1:9) {
m <- leaflet() %>%
addTiles() %>%  # Add default OpenStreetMap map tiles
addMarkers(lng=read_html(placesurl[j])%>%html_nodes(".latitude")%>%html_text(),
lat=read_html(placesurl[j])%>%html_nodes(".longitude")%>%html_text(),
popup=places[j])
}
m  # Print the map
read_html(placesurl[j])%>%html_nodes(".latitude")%>%html_text()
read_html("placesurl[j]")%>%html_nodes(".latitude")%>%html_text()
read_html("placesurl[1]")%>%html_nodes(".latitude")%>%html_text()
read_html(paste(placesurl[1]))%>%html_nodes(".latitude")%>%html_text()
m<-read_html(paste(placesurl[1]))%>%html_nodes(".latitude")%>%html_text()
placesurl[1]
library(rvest)
library(leaflet)
places <- read_html("https://zh.wikipedia.org/wiki/%E4%B8%AD%E8%8F%AF%E6%B0%91%E5%9C%8B%E5%9C%8B%E5%AE%B6%E5%85%AC%E5%9C%92")%>%
html_nodes("td:nth-child(2) a") %>%
html_text()
location <- placesurl <- 0
for (i in 1:9) {
placesurl[i] <- paste("https://zh.wikipedia.org/wiki/", places[i],sep='')
}
placesurl[1]
# location[1] for latitude
# location[2] for
for (j in 1:9) {
m <- leaflet() %>%
addTiles() %>%  # Add default OpenStreetMap map tiles
addMarkers(lng=read_html(placesurl[j])%>%html_nodes(".latitude")%>%html_text(),
lat=read_html(placesurl[j])%>%html_nodes(".longitude")%>%html_text(),
popup=places[j])
}
m  # Print the map
# location[1] for latitude
# location[2] for
for (j in 1:9) {
m <- leaflet() %>%
addTiles() %>%  # Add default OpenStreetMap map tiles
addMarkers(lng=read_html(placesurl[j])%>%html_nodes(".latitude")%>%html_text()%>%as.numeric(),
lat=read_html(placesurl[j])%>%html_nodes(".longitude")%>%html_text()%>%as.numeric(),
popup=places[j])
}
m  # Print the map
warnings()
# location[1] for latitude
# location[2] for
for (j in 1:9) {
m <- leaflet() %>%
addTiles() %>%  # Add default OpenStreetMap map tiles
addMarkers(lng=read_html(placesurl[j])%>%html_nodes(".longitude")%>%html_text()%>%as.numeric(),
lat=read_html(placesurl[j])%>%html_nodes(".latitude")%>%html_text()%>%as.numeric(),
popup=places[j])
}
m  # Print the map
read_html(placesurl[j])%>%html_nodes(".longitude")%>%html_text()%>%as.numeric()
read_html(placesurl[j])%>%html_nodes(".longitude")%>%html_text()
placesurl[1]
read_html(placesurl[1])%>%html_nodes(".longitude")%>%html_text()
read_html(placesurl[1])%>%html_nodes(".longitude")%>%html_text()
read_html(placesurl[1])%>%html_nodes(".laditude")%>%html_text()
read_html(placesurl[1])%>%html_nodes(".laditude")%>%html_text()
ongitude
read_html(placesurl[1])%>%html_nodes(".longitude")%>%html_text()
read_html(placesurl[1])%>%html_nodes(".laditude")%>%html_text()
read_html(placesurl[1])%>%html_nodes(".latitude")%>%html_text()
read_html(placesurl[1])%>%html_nodes("#coordinates .latitude")%>%html_text()
read_html(placesurl[1])%>%html_nodes("#coordinates .latitude")%>%html_text()%>%as.numeric()
library(rvest)
library(leaflet)
places <- read_html("https://zh.wikipedia.org/wiki/%E4%B8%AD%E8%8F%AF%E6%B0%91%E5%9C%8B%E5%9C%8B%E5%AE%B6%E5%85%AC%E5%9C%92")%>%
html_nodes("td:nth-child(2) a") %>%
html_text()
lat<-long<-location <- placesurl <- 0
for (i in 1:9) {
placesurl[i] <- paste("https://zh.wikipedia.org/wiki/", places[i],sep='')
}
for (j in 1:9) {
long[j]<- read_html(placesurl[j])%>%html_nodes("#coordinates .longitude")%>%html_text()
lat[j]<- read_html(placesurl[j])%>%html_nodes("#coordinates .latitude")%>%html_text()
}
read_html(placesurl[1])%>%html_nodes("#coordinates .longitude")%>%html_text()
read_html(placesurl[2])%>%html_nodes("#coordinates .longitude")%>%html_text()
placesurl[2]
url <- read_html("http://open.mapquestapi.com/geocoding/v1/address")
url <- read_html("https://api.opencagedata.com/geocode/version/format?parameters")
url <- read_html("https://api.opencagedata.com/geocode/version/format?parameters", key=ecc60a065eff4d33907058bcad9820d7)
url <- read_html("https://api.opencagedata.com/geocode/version/format?parameters", key="ecc60a065eff4d33907058bcad9820d7")
url <- read_html("https://api.opencagedata.com/geocode/v1/xml?q=PLACENAME&key=ecc60a065eff4d33907058bcad9820d7
")
url <- read_html("https://api.opencagedata.com/geocode/v1/xml?q=PLACENAME&key=ecc60a065eff4d33907058bcad9820d7")
url <- read_html("https://api.opencagedata.com/geocode/v1/xml?q=PLACENAME&key=ecc60a065eff4d33907058bcad9820d7")
url <- read_html("https://api.opencagedata.com/geocode/v1/xml?q=台北市中正區延平南路96號&key=ecc60a065eff4d33907058bcad9820d7")
url
node <- read_nodes(url,",latitude")
node <- html_nodes(url,",latitude")
node <- html_nodes(url,",latitude")
node <- html_nodes(url,".latitude")
View(url)
curve(2^(sin(pi*x)),from = -100, to=100)
curve(|x|/sqrt(2-x^2)),from = -100, to=100)
curve(|x/sqrt(2-x^2)),from = -100, to=100)
curve(\left|x\right|/sqrt(2-x^2)),from = -100, to=100)
curve(left|xright|/sqrt(2-x^2)),from = -100, to=100)
curve(left|x|right/sqrt(2-x^2)),from = -100, to=100)
curve(|x|/sqrt(2-x^2),from = -100, to=100)
curve(||x||/sqrt(2-x^2),from = -100, to=100)
curve(abs(x)/sqrt(2-x^2),from = -100, to=100)
curve(abs(x)/sqrt(2-(x^2)),from = -100, to=100)
curve(abs(x)/sqrt(2-(x^2)),from = -1000, to=1000)
curve(x^2,-100,100)
curve(x^2,-1,1)
x^2
curve(deriv(x^2,x) ,-1,1)deri
curve(deriv(x^2,x) ,-1,1)
curve(deriv(x^2,"x") ,-1,1)
curve(deriv(~x^2,"x") ,-1,1)
deriv(~x^2,"x")
a<-deriv(~x^2,"x")
a
a<-deriv(~x^2)
a(2)
a<-deriv(~x^2,"x=2")
a
a<-deriv(~x^2,"x")
a
curve(a.grad ,-1,1)
curve(sqrt(x^3+3*x^2),from = -1000, to=1000)
curve(x^3+3*x^2,from = -1000, to=1000)
curve(y^2=x^3+3*x^2,from = -1000, to=1000)
curve(y^2==x^3+3*x^2,from = -1000, to=1000)
curve(y^2=x^3+3*x^2,from = -1000, to=1000)
op <- par(mfrow = c(2, 2))
curve(x^3 - 3*x, -2, 2)
curve(x^2 - 2, add = TRUE, col = "violet")
curve(1/(1+x^2),from = -1000, to=1000)
curve(1/(1+x^2),from = -1, to=1/2)
curve(x/(1+x^2),from = -1, to=1)
curve(x/(1+x^2),from = -100, to=100)
curve(x/(1+x^2),from = -1000, to=1000)
curve((sqrt(x^2+9)-3)/(x^2),from = -1000, to=1000)
curve((sqrt(x^2+9)-3)/(x^2),from = -1, to=1)
curve((sqrt(x^2+9)-3)/(x^2),from = -0.1, to=0.1)
curve((sqrt(x^2+9)-3)/(x^2),from = -0.0000000000001, to=0.00000000000001)
curve((sqrt(x^2+9)-3)/(x^2),from = -0.000000000000000000000001, to=0.000000000000000000000000000000000001)
shiny::runApp('GitHub/Rlanguage/week_7/hw/baseball')
runApp('GitHub/Rlanguage/week_7/hw/baseball')
runApp('GitHub/Rlanguage/week_7/hw/baseball')
runApp('GitHub/Rlanguage/week_7/hw/baseball')
runApp('GitHub/Rlanguage/week_7/hw/baseball')
runApp('GitHub/Rlanguage/week_7/hw/baseball')
runApp('GitHub/Rlanguage/week_7/hw/baseball')
runApp('GitHub/Rlanguage/week_7/hw/baseball')
runApp('GitHub/Rlanguage/week_7/hw/baseball')
runApp('GitHub/Rlanguage/week_7/hw/baseball')
runApp('GitHub/Rlanguage/week_7/hw/baseball')
runApp('GitHub/Rlanguage/week_7/hw/baseball')
runApp('GitHub/Rlanguage/week_7/hw/baseball')
runApp('GitHub/Rlanguage/week_7/hw/baseball')
runApp('GitHub/Rlanguage/week_7/hw/baseball')
runApp('GitHub/Rlanguage/week_7/hw/baseball')
runApp('GitHub/Rlanguage/week_7/hw/baseball')
runApp('GitHub/Rlanguage/week_7/hw/baseball')
runApp('GitHub/Rlanguage/week_7/hw/baseball')
runApp('GitHub/Rlanguage/week_7/hw/baseball')
runApp('GitHub/Rlanguage/week_7/hw/baseball')
runApp('GitHub/Rlanguage/week_7/hw/baseball')
runApp('GitHub/Rlanguage/week_7/hw/baseball')
runApp('GitHub/Rlanguage/week_7/hw/baseball')
shiny::runApp('GitHub/Rlanguage/week_7/hw/baseball')
runApp('GitHub/Rlanguage/week_7/hw/baseball')
shiny::runApp('GitHub/Rlanguage/week_7/hw/baseball')
runApp('GitHub/Rlanguage/week_7/hw/baseball')
library(readr)
pitching <- read_csv("GitHub/Rlanguage/week_7/hw/baseball/pitching.csv")
View(pitching)
runApp('GitHub/Rlanguage/week_7/hw/baseball')
shiny::runApp('GitHub/Rlanguage/week_7/hw/baseball')
runApp('GitHub/Rlanguage/week_7/hw/baseball')
runApp('GitHub/Rlanguage/week_7/hw/baseball')
runApp('GitHub/Rlanguage/week_7/hw/baseball')
runApp('GitHub/Rlanguage/week_7/hw/baseball')
library(readr)
team_fielding <- read_csv("GitHub/Rlanguage/week_7/hw/baseball/team_fielding.csv")
View(team_fielding)
library(readr)
team_standard_batting <- read_csv("GitHub/Rlanguage/week_7/hw/baseball/team_standard_batting.csv")
View(team_standard_batting)
library(readr)
team_standard_pitching <- read_csv("GitHub/Rlanguage/week_7/hw/baseball/team_standard_pitching.csv")
View(team_standard_pitching)
shiny::runApp('GitHub/Rlanguage/week_7/hw/baseball')
runApp('GitHub/Rlanguage/week_7/hw/baseball')
shiny::runApp('GitHub/Rlanguage/week_7/hw/baseball')
runApp('GitHub/Rlanguage/week_7/hw/baseball')
runApp('GitHub/Rlanguage/week_7/hw/baseball')
runApp('GitHub/Rlanguage/week_7/hw/baseball')
runApp('GitHub/Rlanguage/week_7/hw/baseball')
runApp('GitHub/Rlanguage/week_7/hw/baseball')
runApp('GitHub/Rlanguage/week_7/hw/baseball')
runApp('GitHub/Rlanguage/week_7/hw/baseball')
runApp('GitHub/Rlanguage/week_7/hw/baseball')
runApp('GitHub/Rlanguage/week_7/hw/baseball')
library(readr)
batting <- read_csv("GitHub/Rlanguage/week_7/hw/baseball/batting.csv")
View(batting)
runApp('GitHub/Rlanguage/week_7/hw/baseball')
runApp('GitHub/Rlanguage/week_7/hw/baseball')
shiny::runApp('GitHub/Rlanguage/week_7/hw/baseball')
runApp('GitHub/Rlanguage/week_7/hw/baseball')
runApp('GitHub/Rlanguage/week_7/hw/baseball')
shiny::runApp('GitHub/Rlanguage/week_7/hw/baseball')
shiny::runApp('GitHub/Rlanguage/week_7/hw/baseball')
runApp('GitHub/Rlanguage/week_7/hw/baseball')
ana_post_fielding <- read_csv("ana_post_fielding.csv")
setwd("~/GitHub/Rlanguage/week_7/hw/baseball")
ana_post_fielding <- read_csv("ana_post_fielding.csv")
runApp()
runApp()
library(tidyverse)
library(readr)
team_fielding <- read_csv("team_fielding.csv")
team_standard_batting <- read_csv("team_standard_batting.csv")
team_standard_pitching <- read_csv("team_standard_pitching.csv")
newvar <- t(team_standard_batting)
newvar <- as.data.frame(newvar, stringsAsFactors = F)
colnames(newvar) <-  as.character(unlist(newvar[1, ])) # the first row will be the header
newvar = newvar[-1, ]
newvar = newvar[,-33 ]
newvar = newvar[,-32 ]
newvar = newvar[,-1 ]
newvar1 <- newvar
for(i in 1:30){
newvar[,i] <- as.numeric(newvar[,i])
}
for(k in 1:28){
newvar<- mutate(newvar, counting = newvar$BOS-newvar$BOS)
if(newvar[k,31]>0){
newvar[k,32] <- 1
}else if(newvar[k,31]==0){
newvar[k,32] <- 0
}else if(newvar[k,31]<0){
newvar[k,32] <- -1
}
}
row.names(newvar) <- row.names(newvar1)
View(newvar)
for(k in 1:28){
newvar<- mutate(newvar, counting = newvar$BOS-newvar$LAD)
if(newvar[k,31]>0){
newvar[k,32] <- 1 + newvar[k,32]
}else if(newvar[k,31]==0){
newvar[k,32] <- 0 + newvar[k,32]
}else if(newvar[k,31]<0){
newvar[k,32] <- -1 + newvar[k,32]
}
}
for(k in 1:28){
newvar<- mutate(newvar, counting = newvar$BOS-newvar$HOU)
if(newvar[k,31]>0){
newvar[k,32] <- 1 + newvar[k,32]
}else if(newvar[k,31]==0){
newvar[k,32] <- 0 + newvar[k,32]
}else if(newvar[k,31]<0){
newvar[k,32] <- -1 + newvar[k,32]
}
}
for(k in 1:28){
newvar<- mutate(newvar, counting = newvar$LAD-newvar$MIL)
if(newvar[k,31]>0){
newvar[k,32] <- 1 + newvar[k,32]
}else if(newvar[k,31]==0){
newvar[k,32] <- 0 + newvar[k,32]
}else if(newvar[k,31]<0){
newvar[k,32] <- -1 + newvar[k,32]
}
}
for(k in 1:28){
newvar<- mutate(newvar, counting = newvar$BOS-newvar$NYY)
if(newvar[k,31]>0){
newvar[k,32] <- 1 + newvar[k,32]
}else if(newvar[k,31]==0){
newvar[k,32] <- 0 + newvar[k,32]
}else if(newvar[k,31]<0){
newvar[k,32] <- -1 + newvar[k,32]
}
}
for(k in 1:28){
newvar<- mutate(newvar, counting = newvar$HOU-newvar$CLE)
if(newvar[k,31]>0){
newvar[k,32] <- 1 + newvar[k,32]
}else if(newvar[k,31]==0){
newvar[k,32] <- 0 + newvar[k,32]
}else if(newvar[k,31]<0){
newvar[k,32] <- -1 + newvar[k,32]
}
}
for(k in 1:28){
newvar<- mutate(newvar, counting = newvar$MIL-newvar$COL)
if(newvar[k,31]>0){
newvar[k,32] <- 1 + newvar[k,32]
}else if(newvar[k,31]==0){
newvar[k,32] <- 0 + newvar[k,32]
}else if(newvar[k,31]<0){
newvar[k,32] <- -1 + newvar[k,32]
}
}
for(k in 1:28){
newvar<- mutate(newvar, counting = newvar$LAD-newvar$ATL)
if(newvar[k,31]>0){
newvar[k,32] <- 1 + newvar[k,32]
}else if(newvar[k,31]==0){
newvar[k,32] <- 0 + newvar[k,32]
}else if(newvar[k,31]<0){
newvar[k,32] <- -1 + newvar[k,32]
}
}
for(k in 1:28){
newvar<- mutate(newvar, counting = newvar$NYY-newvar$OAK)
if(newvar[k,31]>0){
newvar[k,32] <- 1 + newvar[k,32]
}else if(newvar[k,31]==0){
newvar[k,32] <- 0 + newvar[k,32]
}else if(newvar[k,31]<0){
newvar[k,32] <- -1 + newvar[k,32]
}
}
for(k in 1:28){
newvar<- mutate(newvar, counting = newvar$COL-newvar$CHC)
if(newvar[k,31]>0){
newvar[k,32] <- 1 + newvar[k,32]
}else if(newvar[k,31]==0){
newvar[k,32] <- 0 + newvar[k,32]
}else if(newvar[k,31]<0){
newvar[k,32] <- -1 + newvar[k,32]
}
}
row.names(newvar) <- row.names(newvar1)
View(newvar)
write.csv(newvar,"ana_post_batting.csv")
library(tidyverse)
library(readr)
team_fielding <- read_csv("team_fielding.csv")
team_standard_batting <- read_csv("team_standard_batting.csv")
team_standard_pitching <- read_csv("team_standard_pitching.csv")
newvar <- t(team_standard_pitching)
newvar <- as.data.frame(newvar, stringsAsFactors = F)
colnames(newvar) <-  as.character(unlist(newvar[1, ])) # the first row will be the header
newvar = newvar[-1, ]
newvar = newvar[,-32 ]
newvar = newvar[,-31 ]
newvar1 <- newvar
for(i in 1:30){
newvar[,i] <- as.numeric(newvar[,i])
}
for(k in 1:35){
newvar<- mutate(newvar, counting = newvar$BOS-newvar$BOS)
if(newvar[k,31]>0){
newvar[k,32] <- 1
}else if(newvar[k,31]==0){
newvar[k,32] <- 0
}else if(newvar[k,31]<0){
newvar[k,32] <- -1
}
}
row.names(newvar) <- row.names(newvar1)
View(newvar)
for(k in 1:35){
newvar<- mutate(newvar, counting = newvar$BOS-newvar$LAD)
if(newvar[k,31]>0){
newvar[k,32] <- 1 + newvar[k,32]
}else if(newvar[k,31]==0){
newvar[k,32] <- 0 + newvar[k,32]
}else if(newvar[k,31]<0){
newvar[k,32] <- -1 + newvar[k,32]
}
}
for(k in 1:35){
newvar<- mutate(newvar, counting = newvar$BOS-newvar$HOU)
if(newvar[k,31]>0){
newvar[k,32] <- 1 + newvar[k,32]
}else if(newvar[k,31]==0){
newvar[k,32] <- 0 + newvar[k,32]
}else if(newvar[k,31]<0){
newvar[k,32] <- -1 + newvar[k,32]
}
}
for(k in 1:35){
newvar<- mutate(newvar, counting = newvar$LAD-newvar$MIL)
if(newvar[k,31]>0){
newvar[k,32] <- 1 + newvar[k,32]
}else if(newvar[k,31]==0){
newvar[k,32] <- 0 + newvar[k,32]
}else if(newvar[k,31]<0){
newvar[k,32] <- -1 + newvar[k,32]
}
}
for(k in 1:35){
newvar<- mutate(newvar, counting = newvar$BOS-newvar$NYY)
if(newvar[k,31]>0){
newvar[k,32] <- 1 + newvar[k,32]
}else if(newvar[k,31]==0){
newvar[k,32] <- 0 + newvar[k,32]
}else if(newvar[k,31]<0){
newvar[k,32] <- -1 + newvar[k,32]
}
}
for(k in 1:35){
newvar<- mutate(newvar, counting = newvar$HOU-newvar$CLE)
if(newvar[k,31]>0){
newvar[k,32] <- 1 + newvar[k,32]
}else if(newvar[k,31]==0){
newvar[k,32] <- 0 + newvar[k,32]
}else if(newvar[k,31]<0){
newvar[k,32] <- -1 + newvar[k,32]
}
}
for(k in 1:35){
newvar<- mutate(newvar, counting = newvar$MIL-newvar$COL)
if(newvar[k,31]>0){
newvar[k,32] <- 1 + newvar[k,32]
}else if(newvar[k,31]==0){
newvar[k,32] <- 0 + newvar[k,32]
}else if(newvar[k,31]<0){
newvar[k,32] <- -1 + newvar[k,32]
}
}
for(k in 1:35){
newvar<- mutate(newvar, counting = newvar$LAD-newvar$ATL)
if(newvar[k,31]>0){
newvar[k,32] <- 1 + newvar[k,32]
}else if(newvar[k,31]==0){
newvar[k,32] <- 0 + newvar[k,32]
}else if(newvar[k,31]<0){
newvar[k,32] <- -1 + newvar[k,32]
}
}
for(k in 1:35){
newvar<- mutate(newvar, counting = newvar$NYY-newvar$OAK)
if(newvar[k,31]>0){
newvar[k,32] <- 1 + newvar[k,32]
}else if(newvar[k,31]==0){
newvar[k,32] <- 0 + newvar[k,32]
}else if(newvar[k,31]<0){
newvar[k,32] <- -1 + newvar[k,32]
}
}
for(k in 1:35){
newvar<- mutate(newvar, counting = newvar$COL-newvar$CHC)
if(newvar[k,31]>0){
newvar[k,32] <- 1 + newvar[k,32]
}else if(newvar[k,31]==0){
newvar[k,32] <- 0 + newvar[k,32]
}else if(newvar[k,31]<0){
newvar[k,32] <- -1 + newvar[k,32]
}
}
row.names(newvar) <- row.names(newvar1)
View(newvar)
write.csv(newvar,"ana_post_pitching.csv")
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
