}
else{
print(paste(year," 不是閏年"))
}
# 請寫一段程式碼，能判斷輸入之西元年分 year 是否為閏年
year <- readline(prompt = "輸之西元年分: ")
if(year%%4==0 & year%%100!=0 & year%%400==0){
print(paste(year," 是閏年"))
}
else{
print(paste(year," 不是閏年"))
}
# 請寫一段程式碼，能判斷輸入之西元年分 year 是否為閏年
year <- readline(prompt = "輸之西元年分: ")
if(year%%4==0 & year%%100!=0 & year%%400==0){
print(paste(year," 是閏年"))
}
else{
print(paste(year," 不是閏年"))
}
year <- as.integer(year)
# 請寫一段程式碼，能判斷輸入之西元年分 year 是否為閏年
year <- readline(prompt = "輸之西元年分: ")
year <- as.integer(year)
View(readinteger)
if(year%%4==0 & year%%100!=0 & year%%400==0){
print(paste(year," 是閏年"))
}
# 請寫一段程式碼，能判斷輸入之西元年分 year 是否為閏年
year <- readline(prompt = "輸之西元年分: ")
year <- as.integer(year)
if(year%%4==0 & year%%100!=0 & year%%400==0){
print(paste(year," 是閏年"))
}
else{
print(paste(year," 不是閏年"))
}
ifelse(year%%4==0 & year%%100!=0 & year%%400==0,print(paste(year," 是閏年")),print(paste(year," 不是閏年")))
# 請寫一段程式碼，能判斷輸入之西元年分 year 是否為閏年
year <- readline(prompt = "輸之西元年分: ")
year <- as.integer(year)
ifelse(year%%4==0 & year%%100!=0 & year%%400==0,print(paste(year," 是閏年")),print(paste(year," 不是閏年")))
# generate random four nums
random_four <- sample(0:9, 4, replace = T, prob = NULL)
a <- F
playround <- 1
while (a==F) {
# player input four digit
guess <- as.numeric(readline(prompt = "請輸入四個數字"))
# get individual nums
indi_num <- c(1:4)
a <- 0
b <- 0
for (i in 1:4) {
indi_num[i] <- as.numeric(substr(guess, i, i))
if(indi_num[i]==random_four[i]){
a <- a+1
}else{
k <- grep(pattern = indi_num[i], random_four)
if(names(random_four[k])!="gg"){
if(k>0){
b <- b+1
names(random_four[k]) <- "gg"
}
}
}
}
if(random_four==indi_num){
print(paste("答對了，正確答案是 ", random_four, " 你玩了 ", playround, " 次"))
a <- T
}else{
print(paste(a,"A",b,"B"))
playround <- playround + 1
}
}
library(httr)
url <- "https://shopping.pchome.com.tw/"
res = GET(url)
res_json = content(res)
do.call(rbind, res_json$prods)
View(data.frame(do.call(rbind, res_json$prods)))
package(httr)
install.packages("rvest")
library(rvest)
#Load HTML website:
html <- read_html("/rvest-web-scraping-using-r/")
#Include relevant HTML nodes using CSS generator:
marketingtable <- html_nodes(html, ".odd .column-4 , .odd .column-3 , .odd .column-2 , .odd .column-1, .even .column-4 , .even .column-3 , .even .column-2 , .even .column-1")
#Determine table length
length(marketingtable)
#Import table by html_text function
webtable <-html_text(marketingtable)
webtable
#Load HTML website:
html <- read_html("/rvest-web-scraping-using-r/")
#Include relevant HTML nodes using CSS generator:
marketingtable <- html_nodes(html, ".odd .column-4 , .odd .column-3 , .odd .column-2 , .odd .column-1, .even .column-4 , .even .column-3 , .even .column-2 , .even .column-1")
#Determine table length
length(marketingtable)
#Import table by html_text function
webtable <-html_text(marketingtable)
webtable
#Load HTML website:
html <- read_html("https://www.michaeljgrogan.com/rvest-web-scraping-using-r/")
#Include relevant HTML nodes using CSS generator:
marketingtable <- html_nodes(html, ".odd .column-4 , .odd .column-3 , .odd .column-2 , .odd .column-1, .even .column-4 , .even .column-3 , .even .column-2 , .even .column-1")
#Determine table length
length(marketingtable)
#Import table by html_text function
webtable <-html_text(marketingtable)
webtable
#Structure separate variables according to node
observation <- html_nodes(html, ".odd .column-1, .even .column-1")
marketingspend <- html_nodes(html, ".odd .column-2, .even .column-2")
numberofcampaigns <- html_nodes(html, ".odd .column-3, .even .column-3")
consumerrating <- html_nodes(html, ".odd .column-4, .even .column-4")
#Import table from web page
html <- read_html("https://www.michaeljgrogan.com/rvest-web-scraping-using-r/")
#Structure separate variables according to node
observation <- html_nodes(html, ".odd .column-1, .even .column-1")
marketingspend <- html_nodes(html, ".odd .column-2, .even .column-2")
numberofcampaigns <- html_nodes(html, ".odd .column-3, .even .column-3")
consumerrating <- html_nodes(html, ".odd .column-4, .even .column-4")
#Define separate variables
observationvalues<-html_text(observation)
marketingspendvalues<-html_text(marketingspend)
numberofcampaignsvalues<-html_text(numberofcampaigns)
consumerratingvalues<-html_text(consumerrating)
#Define separate variables
observationvalues<-html_text(observation)
marketingspendvalues<-html_text(marketingspend)
numberofcampaignsvalues<-html_text(numberofcampaigns)
consumerratingvalues<-html_text(consumerrating)
observationvalues
#Define separate variables
observationvalues<-html_text(observation)
marketingspendvalues<-html_text(marketingspend)
numberofcampaignsvalues<-html_text(numberofcampaigns)
consumerratingvalues<-html_text(consumerrating)
observationvalues
print(observationvalues)
cat(observationvalues)
print("halloworld")
df = data.frame(observationvalues, marketingspendvalues, numberofcampaignsvalues, consumerratingvalues)
df2<-df[-1, ]
df2
df = data.frame(observationvalues, marketingspendvalues, numberofcampaignsvalues, consumerratingvalues)
df2<-df[-1, ]
df2
view df2
View df2
view(df2)
View(df2)
library(rvest)
#Load HTML website:
html <- read_html("https://www.michaeljgrogan.com/rvest-web-scraping-using-r/")
#Include relevant HTML nodes using CSS generator:
marketingtable <- html_nodes(html, ".odd .column-4 , .odd .column-3 , .odd .column-2 , .odd .column-1, .even .column-4 , .even .column-3 , .even .column-2 , .even .column-1")
#Determine table length
length(marketingtable)
#Import table by html_text function
webtable <-html_text(marketingtable)
webtable
#Import table from web page
html <- read_html("https://www.michaeljgrogan.com/rvest-web-scraping-using-r/")
#Structure separate variables according to node
observation <- html_nodes(html, ".odd .column-1, .even .column-1")
marketingspend <- html_nodes(html, ".odd .column-2, .even .column-2")
numberofcampaigns <- html_nodes(html, ".odd .column-3, .even .column-3")
consumerrating <- html_nodes(html, ".odd .column-4, .even .column-4")
#Define separate variables
observationvalues<-html_text(observation)
marketingspendvalues<-html_text(marketingspend)
numberofcampaignsvalues<-html_text(numberofcampaigns)
consumerratingvalues<-html_text(consumerrating)
consumerratingvalues
#Structure data frame and remove heading
df = data.frame(observationvalues, marketingspendvalues, numberofcampaignsvalues, consumerratingvalues)
df2<-df[-1, ]
View(df2)
#Load HTML website:
html <- read_html("https://www.michaeljgrogan.com/rvest-web-scraping-using-r/")
#Include relevant HTML nodes using CSS generator:
marketingtable <- html_nodes(html, ".odd .column-4 , .odd .column-3 , .odd .column-2 , .odd .column-1, .even .column-4 , .even .column-3 , .even .column-2 , .even .column-1")
marketingtable
#Determine table length
length(marketingtable)
#Import table by html_text function
webtable <-html_text(marketingtable)
webtable
html
#Determine table length
length(marketingtable)
movie <- read_html("http://www.imdb.com/title/tt1490017/")
cast <- html_nodes(movie, "#titleCast span.itemprop")
html_text(cast)
html_name(cast)
html_attrs(cast)
html_attr(cast, "class")
webtable
marketingtable
webtable
#Structure separate variables according to node
observation <- html_nodes(html, ".odd .column-1, .even .column-1")
marketingspend <- html_nodes(html, ".odd .column-2, .even .column-2")
numberofcampaigns <- html_nodes(html, ".odd .column-3, .even .column-3")
consumerrating <- html_nodes(html, ".odd .column-4, .even .column-4")
#Define separate variables
observationvalues<-html_text(observation)
observationvalues
marketingspendvalues<-html_text(marketingspend)
marketingspendvalues
numberofcampaignsvalues<-html_text(numberofcampaigns)
consumerratingvalues<-html_text(consumerrating)
consumerratingvalues
#Structure data frame and remove heading
df = data.frame(observationvalues, marketingspendvalues, numberofcampaignsvalues, consumerratingvalues)
df2<-df[-1, ]
df2
View(df2)
#Define separate variables
observationvalues<-html_text(observation)
observationvalues
#Structure data frame and remove heading
df = data.frame(observationvalues, marketingspendvalues, numberofcampaignsvalues, consumerratingvalues)
df2<-df[,-1 ]
view(df2)
View(df2)
View(df3)
df3<-df[,-1 ]
View(df3)
df3<-df[-1, ]
View(df3)
df3<-df[1, ]
View(df3)
df2<-df[-1, ]
View(df2)
df3<-df[2, ]
View(df3)
df2<-df[1:6, ]
View(df2)
df2<-df[-1, ]
View(df2)
df2<-df[-2, ]
View(df2)
df2<-df[1:6, ]
View(df2)
#Load HTML website:
html <- read_html("https://24h.pchome.com.tw/prod/DYAJBS-A90097O9K")
#Include relevant HTML nodes using CSS generator:
marketingtable <- html_nodes(html, ".odd .column-4 , .odd .column-3 , .odd .column-2 , .odd .column-1, .even .column-4 , .even .column-3 , .even .column-2 , .even .column-1")
#Load HTML website:
html <- read_html("https://24h.pchome.com.tw/prod/DYAJBS-A90097O9K")
#Include relevant HTML nodes using CSS generator:
marketingtable <- html_nodes(html, ".odd .column-4 , .odd .column-3 , .odd .column-2 , .odd .column-1, .even .column-4 , .even .column-3 , .even .column-2 , .even .column-1")
marketingtable
#Determine table length
length(marketingtable)
#Import table by html_text function
webtable <-html_text(marketingtable)
webtable
#Load HTML website:
html <- read_html("https://www.apple.com/tw/iphone-xs/specs/")
#Include relevant HTML nodes using CSS generator:
marketingtable <- html_nodes(html, ".odd .column-4 , .odd .column-3 , .odd .column-2 , .odd .column-1, .even .column-4 , .even .column-3 , .even .column-2 , .even .column-1")
marketingtable
#Determine table length
length(marketingtable)
#Load HTML website:
html <- read_html("https://www.apple.com/tw/iphone-xs/specs/")
#Include relevant HTML nodes using CSS generator:
marketingtable <- html_nodes(html, ".odd .column-4 , .odd .column-3 , .odd .column-2 , .odd .column-1, .even .column-4 , .even .column-3 , .even .column-2 , .even .column-1")
marketingtable
#Load HTML website:
html <- read_html("https://www.cwb.gov.tw/V7/forecast/")
#Include relevant HTML nodes using CSS generator:
marketingtable <- html_nodes(html, ".odd .column-4 , .odd .column-3 , .odd .column-2 , .odd .column-1, .even .column-4 , .even .column-3 , .even .column-2 , .even .column-1")
marketingtable
#Determine table length
length(marketingtable)
#Load HTML website:
html <- read_html("https://www.cwb.gov.tw/V7/earthquake/")
#Include relevant HTML nodes using CSS generator:
marketingtable <- html_nodes(html, ".odd .column-4 , .odd .column-3 , .odd .column-2 , .odd .column-1, .even .column-4 , .even .column-3 , .even .column-2 , .even .column-1")
marketingtable
html
#Include relevant HTML nodes using CSS generator:
marketingtable <- html_nodes(html, ".odd .column-4 , .odd .column-3 , .odd .column-2 , .odd .column-1, .even .column-4 , .even .column-3 , .even .column-2 , .even .column-1")
html
#Load HTML website:
html <- read_html("http://scweb.cwb.gov.tw/Page.aspx?ItemId=22&eqdate=2018%2f08%2f29-11:51")
html
#Include relevant HTML nodes using CSS generator:
marketingtable <- html_nodes(html, ".odd .column-4 , .odd .column-3 , .odd .column-2 , .odd .column-1, .even .column-4 , .even .column-3 , .even .column-2 , .even .column-1")
marketingtable
#Include relevant HTML nodes using CSS generator:
marketingtable <- html_nodes(html")
#Determine table length
#Import table by html_text function
library(http)
library(rvest)
library(rvest)
html <- read_html(https://www.cwb.gov.tw/V7/earthquake/)
nods <- html_nodes(html, ".BoxTable02blue")
nods
html
nods <- html_nodes(html, "tr.BoxTable02blue")
html$node
html$doc
nods <- html_nodes(html, "BoxTable")
nod\
nods
nods <- html_nodes(html, ".BoxTable")
nods <- html_nodes(html, ".BoxTable")
nods
library(rvest)
html <- read_html("https://www.cwb.gov.tw/V7/earthquake/")
nods <- html_nodes(html, ".box2")
nods
nods <- html_nodes(html, ".最近地震")
nods
html <- read_html("https://www.cwb.gov.tw/V7/earthquake/")
nods <- html_nodes(html, ".earthshockinfo")
nods
https://www.michaeljgrogan.com/rvest-web-scraping-using-r/
#Load HTML website:
html <- read_html("https://www.michaeljgrogan.com/rvest-web-scraping-using-r/")
#Include relevant HTML nodes using CSS generator:
marketingtable <- html_nodes(html, ".odd .column-4 , .odd .column-3 , .odd .column-2 , .odd .column-1, .even .column-4 , .even .column-3 , .even .column-2 , .even .column-1")
nods <- html_nodes(html, ".BoxTable02")
library(rvest)
html <- read_html("https://www.cwb.gov.tw/V7/earthquake/")
nods <- html_nodes(html, ".BoxTable02")
nods
nods <- html_nodes(html, "table.BoxTable02")
nods
html
#Load HTML website:
html <- read_html("https://www.michaeljgrogan.com/rvest-web-scraping-using-r/")
#Include relevant HTML nodes using CSS generator:
marketingtable <- html_nodes(html, ".odd .column-4 , .odd .column-3 , .odd .column-2 , .odd .column-1, .even .column-4 , .even .column-3 , .even .column-2 , .even .column-1")
marketingtable
#Import table by html_text function
webtable <-html_text(marketingtable)
webtable
html <- read_html("https://www.cwb.gov.tw/V7/earthquake/")
html
library(rvest)
html <- read_html("https://www.cwb.gov.tw/V7/earthquake/")
html
nods <- html_nodes(html, ".BoxTable02")
nods
nods <- html_nodes(html, ".BoxTable02blue")
nods
nods <- html_nodes(html, ".planeleft02")
nods
nods <- html_nodes(html, ".BoxTable02blue")
nods
html <- read_html("https://www.imdb.com/search/title?groups=top_250&sort=user_rating")
html
nods <- html_nodes(html, ".lister-item mode-advanced")
nods
library(rvest)
html <- read_html("https://www.imdb.com/search/title?groups=top_250&sort=user_rating")
html
nods <- html_nodes(html, ".lister-item mode-advanced")
nods
nods <- html_nodes(html, ".lister-item-header .lister-item mode-advanced")
nods
nods <- html_nodes(html, ".lister-item-header.lister-item mode-advanced")
nods
nods <- html_nodes(html, ".lister-item-header.lister-item-content.lister-item mode-advanced")
nods
html
View(html)
nods <- html_nodes(html, ".lister-item-header")
nods
tete <- html_text(nods)
tete
tete <- html_text(nods)
df <- data.frame(tete)
View(df)
Movies <- html_text(nods)
df <- data.frame(Movies)
View(df)
library(rvest)
html <- read_html("https://www.imdb.com/search/title?groups=top_250&sort=user_rating")
nods <- html_nodes(html, ".lister-item-header")
Movies <- html_text(nods)
df <- data.frame(Movies)
View(df)
View(df)
html <- read_html("https://www.imdb.com/search/title?groups=top_250&sort=user_rating")
nods <- html_nodes(html, ".lister-item-header", ".inline-block ratings-imdb-rating")
Movies <- html_text(nods)
df <- data.frame(Movies)
View(df)
nods <- html_nodes(html, ".lister-item-header", ".ratings-bar")
html <- read_html("https://www.imdb.com/search/title?groups=top_250&sort=user_rating&page=1&ref_=adv_nxt")
nods <- html_nodes(html, ".lister-item-header", ".ratings-bar")
Movies <- html_text(nods)
df <- data.frame(Movies)
View(df)
library(rvest)
html <- read_html("https://kma.kkbox.com/charts/daily/song?terr=tw&lang=tc&cate=390")
nods <- html_nodes(html, ".charts-list-song")
songs <- html_text(nods)
df <- data.frame(songs)
View(df)
nods <- html_nodes(html, ".charts-list-desc")
songs <- html_text(nods)
df <- data.frame(songs)
View(df)
library(rvest)
html <- read_html("https://www.imdb.com/search/title?groups=top_250&sort=user_rating&page=1&ref_=adv_nxt")
nods <- html_nodes(html, ".lister-item-header")
Movies <- html_text(nods)
df <- data.frame(Movies)
View(df)
wine.data = read.csv("C:/Users/user/Documents/GitHub/Rlanguage/week_3/course/Book1.csv")
head(wine.data)
wine.data = read.csv(".Book1.csv")
wine.data = read.csv("./Book1.csv")
wine.data = read.csv("/Book1.csv")
getwd()
Book1.csv
wine.data = read.csv("Book1.csv")
wine.data = read.csv("Book1.csv")
setwd("C:/Users/user/Documents/GitHub/Rlanguage/week_3/course")
wine.data = read.csv("Book1.csv")
head(wine.data)
require(datasets)
plot(x=wine.data$points,
y=wine.data$price,
main="country to points",
xlab="country",
ylab="price")
wine.data = read.csv("Book1.csv")
country = wine.data$country
require(datasets)
plot(x=country$Italy
y=wine.data$price,
main="country to points",
xlab="country",
ylab="price")
plot(x=country$Italy,
y=wine.data$price,
main="country to points",
xlab="country",
ylab="price")
country = wine.data[wine.data$country==Italy]
country = wine.data[wine.data$country=="Italy"]
country = wine.data[wine.data$country=="Italy",]
require(datasets)
plot(x=country,
y=wine.data$price,
main="country to points",
xlab="country",
ylab="price")
plot(x=country,
y=wine.data$price,
main="country to points",
xlab="country",
ylab="price")
plot(x=country,
y=wine.data$price,
main="country to points",
xlab="Italy",
ylab="price")
plot(x=country$X,
y=wine.data$price,
main="country to points",
xlab="Italy",
ylab="price")
plot(x=country$X,
y=country$price,
main="country to points",
xlab="Italy",
ylab="price")
plot(x=country$points,
y=country$price,
main="country to points",
xlab="Italy",
ylab="price")
plot(x=country$province,
y=country$price,
main="country to points",
xlab="Italy",
ylab="price")
user
setwd("C:/Users/user/Documents/GitHub/Rlanguage/week_3/course")
wine.data = read.csv("googleplaystore.csv")
require(datasets)
plot(x=g
y=country$price,
main="country to points",
xlab="Italy",
ylab="price")
wine.data = read.csv("googleplaystore.csv")
require(datasets)
plot(x=Genres,
y=Installs,
main = "genres to installs",
xlab = "genres",
ylab = "installs")
wine.data = read.csv("googleplaystore.csv")
require(datasets)
plot(x=Genres,
y=Installs,
main = "genres to installs",
xlab = "genres",
ylab = "installs")
